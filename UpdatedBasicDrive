package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.Servo;

@TeleOp(name = "BasicDrive")
public class BasicDrive extends LinearOpMode {

  private DcMotor linearleft;
  private DcMotor linearright;
  private Servo servo1;
  private Servo servo2;
  private Servo servo3;
  private DcMotor FrontLeft;
  private DcMotor FrontRight;
  private DcMotor BackLeft;
  private DcMotor BackRight;
  private Servo shooterservo;
  private Servo clawmotor;
  private DcMotor rev;

  /**
   * This function is executed when this Op Mode is selected from the Driver Station.
   */
  @Override
  public void runOpMode() {
    linearleft = hardwareMap.get(DcMotor.class, "linearleft");
    linearright = hardwareMap.get(DcMotor.class, "linearright");
    servo1 = hardwareMap.get(Servo.class, "servo1");
    servo2 = hardwareMap.get(Servo.class, "servo2");
    servo3 = hardwareMap.get(Servo.class, "servo3");
    FrontLeft = hardwareMap.get(DcMotor.class, "FrontLeft");
    FrontRight = hardwareMap.get(DcMotor.class, "FrontRight");
    BackLeft = hardwareMap.get(DcMotor.class, "BackLeft");
    BackRight = hardwareMap.get(DcMotor.class, "BackRight");
    shooterservo = hardwareMap.get(Servo.class, "shooter servo");
    clawmotor = hardwareMap.get(Servo.class, "clawmotor");
    rev = hardwareMap.get(DcMotor.class, "rev");
    

    // Put initialization blocks here.
    linearleft.setPower(0);
    linearright.setPower(0);
    sleep(500);
    clawmotor.setPosition(0);
    servo1.setPosition(0)
    servo2.setPosition(0);
    servo3.setPosition(0.89);
    rev.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
    waitForStart();
    if (opModeIsActive()) {
      // Put run blocks here.
      double revPower = 0;
      int revPosition = 0;
      boolean wrist_switch = false;
      boolean arm_flip = false;
      int servo2_Position = 0;
      while (opModeIsActive()) {
        // Variables
        int FL_Power = 0;
        int FR_Power = 0;
        int BL_Power = 0;
        int BR_Power = 0;
        int linearleft_Power = 0;
        int linearright_Power = 0;
        float powervar = .5f;
        // boolean XB_Activated = false;
        // Movement.
        if(Math.abs(gamepad1.left_stick_y) > Math.abs(gamepad1.left_stick_x)) // Moves forwards and backwards
        {
          FL_Power += (gamepad1.left_stick_y);
          FR_Power += (gamepad1.left_stick_y);
          BL_Power += ((gamepad1.left_stick_y * -1));
          BR_Power += (gamepad1.left_stick_y);
        } else if(Math.abs(gamepad1.left_stick_x) > Math.abs(gamepad1.left_stick_y)) // Strafes left and right
        {
          FL_Power += (gamepad1.left_stick_x);
          FR_Power += (gamepad1.left_stick_x * -1);
          BL_Power += (gamepad1.left_stick_x * -1);
          BR_Power += (gamepad1.left_stick_x);
        }
      
        // Turning
        if(Math.abs(gamepad1.right_stick_x) > 0) // Turns
        {
          FL_Power += gamepad1.right_stick_x;
          FR_Power += -(gamepad1.right_stick_x);
          BL_Power += -gamepad1.right_stick_x;
          BR_Power += -gamepad1.right_stick_x;
        }
        
        // Update Wheel values
        FrontLeft.setPower(FL_Power);
        FrontRight.setPower(FR_Power);
        BackLeft.setPower(BL_Power);
        BackRight.setPower(BR_Power);
        
        if (gamepad1.y) {  // 21
          if (arm_flip == false) {
            revPosition = 200;
            revPower = 0.8;
            arm_flip = true;
          }
          else {
            revPosition = 15;
            revPower = -0.8;
            arm_flip = false;
}
        }
        
        if (gamepad1.a) {
          revPower = 0;
        }
        
        rev.setPower(revPower);
        rev.setTargetPosition(revPosition);
        rev.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        
        
        if (gamepad1.right_bumper) {
          servo2_Position += .1; 
        }
        if (gamepad1.left_bumper) {
          servo2_Position -= .1;
        }

        servo2.setPosition(servo2_Position);

        if (gamepad1.dpad_right) {
          servo3.setPosition(0.3);
        }
        if (gamepad1.dpad_left) {
          servo3.setPosition(0.89);
        }

        if (gamepad1.right_trigger > .001) { // Claw moves up
          linearleft_Power += -.4;
          linearright_Power += 0.4;
        } 

        if (gamepad1.left_trigger > .001) { // Claw moves down
          linearleft_Power += .4;
          linearright_Power += -0.4;
        }

        linearleft.setPower(linearleft_Power);
        linearright.setPower(linearright_Power);

        if (gamepad1.dpad_up) {
          linearleft_Power = 1;
          linearright_Power = -1;
          linearleft.setPower(linearleft_Power);
          linearright.setPower(linearright_Power);
        } 

        if (gamepad1.dpad_down) {
          shooterservo.setPosition(0); 
        } else {
          shooterservo.setPosition(.8);
        } 
        
        if (gamepad1.x) {
          servo1.setPosition(.8);    
          // clawmotor.setPosition(0.68);
          // sleep(1000);
          // clawmotor.setPosition(-0.3);
        }
        if (gamepad1.b) {
          servo1.setPosition(0); // clawmotor.setPosition(-0.64);
        }
        telemetry.update();
      }
    }
  }
}
